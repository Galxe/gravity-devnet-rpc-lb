# Global settings for HAProxy instance
global
    # Send logs to stdout for container logging
    log stdout format raw local0
    # Maximum concurrent connections
    maxconn 4096

# Default settings applied to all sections unless overridden
defaults
    log global
    # Connection timeouts for safety
    timeout connect 5s
    timeout client  50s
    timeout server  50s

# Combined frontend for both HTTP/RPC and WebSocket traffic
frontend combined_frontend
    bind 0.0.0.0:8545
    bind 0.0.0.0:8546
    mode tcp
    
    # Use a TCP mode ACL to detect WebSocket traffic (port 8546)
    acl is_websocket dst_port 8546
    
    # Route based on the destination port
    use_backend ws_backend if is_websocket
    default_backend rpc_backend

# Backend configuration for RPC nodes (port 8545)
backend rpc_backend
    mode tcp
    # Round robin load balancing between nodes
    balance roundrobin
    # Enable TCP health checks
    option tcp-check
    # Allow server retry on failure
    option redispatch
    # Sticky sessions configuration
    stick-table type ip size 200k expire 30m
    stick on src
    # RPC nodes with health checks
    server node2 35.238.46.140:8545 check inter 3s fall 2 rise 2
    server node3 34.172.87.158:8545 check inter 3s fall 2 rise 2

# Backend configuration for WebSocket nodes (port 8546)
backend ws_backend
    mode tcp
    # Round robin load balancing between nodes
    balance roundrobin
    # Enable TCP health checks
    option tcp-check
    # Allow server retry on failure
    option redispatch
    # Sticky sessions configuration
    stick-table type ip size 200k expire 30m
    stick on src
    # WebSocket nodes with health checks
    server node2 35.238.46.140:8546 check inter 3s fall 2 rise 2
    server node3 34.172.87.158:8546 check inter 3s fall 2 rise 2

# Health check endpoint for monitoring HAProxy status
# Only accessible from localhost for security
frontend health_check
    # Bind only to localhost (127.0.0.1) to prevent external access
    bind 127.0.0.1:8547
    # Use HTTP mode since health checks are HTTP requests
    mode http
    # Create a simple health endpoint at /health
    # Returns 200 OK if HAProxy is running
    monitor-uri /health
